name: Workflow for Codecov example-python
on: [push, pull_request]
jobs:
    Build_and_Test:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        #- name: Set up Python 3.10
        #  uses: actions/setup-python@v4
        #  with:
        #    python-version: '3.10'
        #- name: Install dependencies
        #  run: pip install -r requirements.txt
        - name: Check dotnet version
        #apt-get update && install -y dotnet-sdk-8.0; dotnet --version
          run: dotnet --version
        - name: Build solution
          run: dotnet build Calculator/Calculator.sln --no-incremental
        #- name: Run tests and collect coverage
        #  run: pytest --cov app ${{ env.CODECOV_ATS_TESTS }}
        - name: Install dotCover
          run: |
            mkdir -p ~/apps/dotCover/
            dotnet tool install JetBrains.dotCover.CommandLineTools --tool-path ~/apps/dotCover/
        - name: Test solution
          run: |
            ~/apps/dotCover/dotnet-dotCover dotnet --output=DetailedXML.xml                --ReportType=DetailedXML -- test Calculator/Calculator.sln
            #~/apps/dotCover/dotnet-dotCover dotnet --output=json_coverage_result.json      --ReportType=JSON        -- test Calculator/Calculator.sln
            #~/apps/dotCover/dotnet-dotCover dotnet --output=xml_coverage_result.xml        --ReportType=XML         -- test Calculator/Calculator.sln
            ~/apps/dotCover/dotnet-dotCover dotnet --output=NDependXML_coverage_result.xml --ReportType=NDependXML  -- test Calculator/Calculator.sln
            #~/apps/dotCover/dotnet-dotCover dotnet --output=SummaryXML_coverage_result.xml --ReportType=SummaryXML  -- test Calculator/Calculator.sln
        - name: Upload coverage to Codacy
          run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r DetailedXML.xml
          env:
            CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v4
          with:
            verbose: true
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}